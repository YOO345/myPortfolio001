 $(function () { /// jQB ///////////////////////
     /*
            [ 스크롤 이벤트 처리구역 설정하기 ]
            1. 스크롤 이벤트는 스크롤바가 움직일때 발생한다
            (마우스휠 이벤트와는 다름!)
            2. 제이쿼리에서 scroll() 메서드로 구현함
            3. 등장할 요소의 위치값과 실행여부를 변수에 관리함
            4. 전체 스크롤일 경우 window객체를 선택하여 구현하고
            만일 별개의 박스에 스크롤바를 제어할 경우에는 그 요소를
            선택하여 구현한다
            5. 등장액션을 위한 사전 css 클래스를 셋업한다!
                (예컨데 투명하고 약간 아래쪽에 내려가 있다가 등장할때 다시 서서히 보이면서 원래 위치로 올라오는 셋팅!)
           */

     /////// 스크롤 관련 변수 설정 /////
     // 1. 스크롤 등장 요소 위치값 설정
     let scpos = []; //배열변수
     // 2. 스크롤 등장 요소 실행여부
     let exsts = []; //배열변수(실행전:0,실행후:1)
     ////////////////////////////////
     let pno = 0;
     //////////////////////////////////////////////
     ////////// [ 위치값 셋팅하기 ] /////////////////
     // 스크롤 대상 클래스: .scAct
     let scAct = $(".pgTxt");
     // 스크롤 대상 만큼 돌면서 셋팅!
     // each(function(idx,ele){구현코드})
     // idx-요소순번, ele-요소자신(this키워드와 동일)
     scAct.each(function (idx, ele) {

         // 1.각 요소의 위치셋팅
         scpos[idx] = $(this).offset().top;

         // 2. 각 요소별 실행여부 셋팅(처음에 0으로 셋팅)
         exsts[idx] = 0;

         console.log("위치값:" + scpos[idx] + "/" + exsts[idx]);

     }); /////// each /////////////////
     /////////////////////////////////////////////////


     // 범위를 위한 변수
     let gap = $(window).height() / 2 ;
     console.log("윈도우높이절반:" + gap);

     // 메뉴 클릭 시 메뉴 클래스변경 실행막기 상태변수
     let mchg = 1; // 1-허용, 0-불허용


     ////////////////////////////////////
     //////// 스크롤 등장액션 함수 /////////
     // 전달값: sct 스크롤탑값, seq 액션순번
     // 조건문 구성 : 
     // 시작위치 보다 큼(>) && 끝위치 보다 작음(<) 
     // && 실행여부 0일 때 
     // if(scTop > 시작위치 && scTop < 끝위치 && 실행여부)
     /////////////////////////////////////
     let showit = function (sct, seq) {

         // 페이지 액션 (등장시작값은 윈도우절반크기를뺌)
         if (sct > scpos[seq] - gap &&
             sct < scpos[seq]) {

             /// 한번만 실행! ////
             if (exsts[seq] === 0) {

                 exsts[seq] = 1; //실행잠금!

                 console.log((seq + 1) + "번실행!");

                 // 대상요소 등장하기!
                 scAct.eq(seq).css({
                     opacity: 1,
                     //                     top: "50%"
                 }); ////// css ///////

             } ////// 한번만 실행 if문 /////
             //// 메뉴 표시 클래스 변경하기 /////
             if (mchg) { // 허용상태일때만 변경!

                 $(".gnb li").eq(seq).addClass("on")
                     .siblings().removeClass("on");

             } ////// if /////////////////////

         } /////// if //////////////////
         //// 메뉴 표시 클래스 변경하기 /////




     }; /////// showit ///////////////
     ////////////////////////////////



     ///// 스크롤 이벤트 함수 구현하기 /////////////
     /// 페이지 전체 스크롤은 window 객체로!

     // 스크롤 탑값 변수
     let scTop;

     $(window).scroll(function () {

         // 1. 전체 window의 스크롤 위치값 알아내기
         // (1) scrollTop() 메서드 : 세로스크롤 위치값
         // (2) scrollLeft() 메서드 : 가로스크롤 위치값
         scTop = $(this).scrollTop();
         //console.log("스위:"+scTop);

         // 2. 액션구간 설정하기


         for (var i = 0; i < scAct.length; i++) {
             showit(scTop, i);
         } /////// for문 //////////////////



     }); //////// scroll //////////////////////////
     /////////////////////////////////////////////






     ///////////////////////////////////////////
     /// GNB a요소 클릭시 스크롤 애니메이션 하기 ////
     // a요소에 href="#아이디명" 하면 바로이동은 가능
     // 그러나 스크롤 애니메이션은 되지 않는다!!!
     // 제이쿼리에서 이것을 해주자!
     // 클릭 이벤트 대상: .gnb a
     ///////////////////////////////////////////
     $(".gnb a.home").click(function (e) {

         e.preventDefault(); //a이동막기!

         // 스크롤 메뉴 변경막기!
         mchg = 0;


         // 1. a요소의 href값 가져오기
         // - 셋팅된 id값으로 위치이동할 것임!
         let pid = $(this).attr("href");
         console.log("아이디:" + pid);

         // 2. 이동할 아이디요소 위치의 top값 구하기
         // - 실제로 스크롤 이동을 위한 값
         let pgpos = $(pid).offset().top;
         // offset() 메서드는 요소의 기본셋팅 정보를 리턴함
         // - top, left, width, height 등을 알 수 있음
         console.log("위치값:" + pgpos);

         // 3. 스크롤 애니메이션으로 페이지이동하기
         // scrollTop 속성은 세로 스크롤위치값(제이쿼리용!)
         // 스크롤 이동대상: html,body 
         // (범용선택요소: 즉, 여러브라우저에서 공통사용됨!)
         $("html,body").stop().animate({
             scrollTop: pgpos + "px"
         }, 1200, "easeInOutQuint", function () {

             // 스크롤 메뉴 변경막기 해제
             mchg = 1;

         }); ///// animate /////
         // stop()을 사용하여 여러개를 클릭했을때 마지막 선택
         // 만 남아서 처리되도록 중간에 쌓인 애니메이션 지움!

         // 4. GNB메뉴의 a요소 클릭했을때 클릭된
         // a요소의 li에 class를 "on"으로 넣으면
         // 이미 셋팅된 CSS의 디자인이 적용되어
         // 라임색 윗줄의 크기가 조금 커진 디자인이
         // 적용되어 마우스 오버시와 동일 디자인이 유지된다
         // 이것을 하는 이유는 현재 페이지가 무엇인지
         // 표시하기 위함이다!
         // this 나자신에서 위로 올라가 li를 선택함!
         $(this).parent().addClass("on")
             .siblings().removeClass("on");



     }); ///////// click //////////////



 }); ///////////// jQB ////////////////////////
